var gulp = require('gulp');
var slash = require('slash');
var render = require('gulp-nunjucks-render');
var rename = require('gulp-rename');
var handleErrors = require('../../lib/handleErrors');
var gutil = require('gulp-util');

module.exports = function(config) {
  return function(glyphs, options) {
    var nunjucksOptions = {
      envOptions: {
        watch: false,
      },
      data: {
        icons: glyphs.map(function(glyph) {
          gutil.log(gutil.colors.green('+ adding ' + glyph.name + ' glyph'));
          return {
            name: glyph.name,
            code: glyph.unicode[0]
              .charCodeAt(0)
              .toString(16)
              .toUpperCase(),
          };
        }),
        fontName: config.options.fontName,
        fontPath: config.fontPath,
        className: config.className,
        comment: '// DO NOT EDIT DIRECTLY!\n  //Generated by ' + __filename + '\n  //from ' + slash(config.template),
      },
    };
    render.nunjucks.configure(config.nunjucks, {
      watch: false,
    });
    return gulp
      .src(config.template)
      .pipe(render(nunjucksOptions))
      .on('error', handleErrors)
      .pipe(rename(config.sassOutputName))
      .pipe(gulp.dest(config.sassDest));
  };
};
